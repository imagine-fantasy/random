Liquibase Database Migration Strategy
Master Configuration
âœ¨ Single Source of Truth

One master changelog file controls all database changes
Each release gets its own changelog file
Cached for 60 minutes to optimize performance

Change Management Strategy
ðŸŽ¯ Release-Based Organization

Changes organized by release versions (e.g., 202501, 202502)
Multiple changelog files per release for better maintainability
Example: changelog-202501-1.yml, changelog-202501-2.yml

Folder Structure Best Practices
ðŸ“‚ Clean Separation
Copy/resources
    /db
        /changelog
            /release-202501/
            /release-202502/
        /scripts

Separates SQL scripts from changelog definitions
Each release in its own folder
Easy to track, review, and rollback changes

Folder Structure Best Practices
ðŸ“‚ Clean Separation
Copy/resources
    /db
        /changelog
            /release-202501/
                /ddl/
                    - create_table.sql
                    - alter_table.sql
                /dml/
                    - insert_data.sql
                    - update_data.sql
            /release-202502/
                /ddl/
                /dml/

Clear separation of DDL and DML scripts per release
Each type of change in its dedicated folder
Maintains clean audit trail of structural vs data changes

Change Implementation
ðŸ”„ Organized Change Pattern

DDL Changes (/ddl/)

Schema modifications
Table structures
Indexes and constraints


DML Changes (/dml/)

Data migrations
Reference data
Data updates
